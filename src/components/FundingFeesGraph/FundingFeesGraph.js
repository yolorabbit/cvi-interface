import React, { useState, useEffect, useContext } from "react";
import ChartOptions from "./ChartOptions";
import { useRef } from "react";
import "./FundingFeesGraph.scss";
import { viewportContext } from "components/Context";
import { useActiveVolInfo } from "components/Hooks";

const feesInfo = [[0, 0.42], [1, 0.42], [2, 0.42], [3, 0.42], [4, 0.42], [5, 0.42], [6, 0.42], [7, 0.42], [8, 0.42], [9, 0.42], [10, 0.42], [11, 0.42], [12, 0.42], [13, 0.42], [14, 0.42], [15, 0.42], [16, 0.42], [17, 0.42], [18, 0.42], [19, 0.42], [20, 0.42], [21, 0.42], [22, 0.42], [23, 0.42], [24, 0.42], [25, 0.42], [26, 0.42], [27, 0.42], [28, 0.42], [29, 0.42], [30, 0.42], [31, 0.42], [32, 0.42], [33, 0.42], [34, 0.42], [35, 0.42], [36, 0.42], [37, 0.42], [38, 0.42], [39, 0.42], [40, 0.42], [41, 0.42], [42, 0.42], [43, 0.42], [44, 0.42], [45, 0.42], [46, 0.42], [47, 0.42], [48, 0.42], [49, 0.42], [50, 0.42], [51, 0.42], [52, 0.42], [53, 0.42], [54, 0.42], [55, 0.42], [56, 0.38], [57, 0.34], [58, 0.3], [59, 0.26], [60, 0.22], [61, 0.2], [62, 0.18], [63, 0.16], [64, 0.14], [65, 0.12], [66, 0.11], [67, 0.096], [68, 0.085], [69, 0.075], [70, 0.065], [71, 0.06], [72, 0.054], [73, 0.049], [74, 0.044], [75, 0.039], [76, 0.036], [77, 0.033], [78, 0.031], [79, 0.028], [80, 0.025], [81, 0.024], [82, 0.023], [83, 0.022], [84, 0.02], [85, 0.019], [86, 0.018], [87, 0.017], [88, 0.017], [89, 0.016], [90, 0.016], [91, 0.015], [92, 0.015], [93, 0.015], [94, 0.015], [95, 0.014], [96, 0.014], [97, 0.014], [98, 0.014], [99, 0.013], [100, 0.013], [101, 0.013], [102, 0.013], [103, 0.013], [104, 0.013], [105, 0.013], [106, 0.013], [107, 0.013], [108, 0.012], [109, 0.012], [110, 0.012], [111, 0.012], [112, 0.012], [113, 0.012], [114, 0.012], [115, 0.012], [116, 0.012], [117, 0.012], [118, 0.012], [119, 0.012], [120, 0.012], [121, 0.012], [122, 0.012], [123, 0.012], [124, 0.012], [125, 0.012], [126, 0.012], [127, 0.012], [128, 0.012], [129, 0.012], [130, 0.012], [131, 0.012], [132, 0.012], [133, 0.012], [134, 0.012], [135, 0.012], [136, 0.012], [137, 0.012], [138, 0.012], [139, 0.012], [140, 0.012], [141, 0.012], [142, 0.012], [143, 0.012], [144, 0.012], [145, 0.012], [146, 0.012], [147, 0.012], [148, 0.012], [149, 0.012], [150, 0.012], [151, 0.012], [152, 0.012], [153, 0.012], [154, 0.012], [155, 0.012], [156, 0.012], [157, 0.012], [158, 0.012], [159, 0.012], [160, 0.012], [161, 0.012], [162, 0.012], [163, 0.012], [164, 0.012], [165, 0.012], [166, 0.012], [167, 0.012], [168, 0.012], [169, 0.012], [170, 0.012], [171, 0.012], [172, 0.012], [173, 0.012], [174, 0.012], [175, 0.012], [176, 0.012], [177, 0.012], [178, 0.012], [179, 0.012], [180, 0.012], [181, 0.012], [182, 0.012], [183, 0.012], [184, 0.012], [185, 0.012], [186, 0.012], [187, 0.012], [188, 0.012], [189, 0.012], [190, 0.012], [191, 0.012], [192, 0.012], [193, 0.012], [194, 0.012], [195, 0.012], [196, 0.012], [197, 0.012], [198, 0.012], [199, 0.012], [200, 0.012]]

const chartInitialize = {
    id: "funding-fees-graph"
}

const FundingFeesGraph = ({ activeVolIndex, maxWidth = 350, maxHeight = 338 }) => {
    const ref = useRef();
    const [chart, setChart] = useState();
    const { windowWidth } = useContext(viewportContext);
    const activeVolInfo = useActiveVolInfo(activeVolIndex);
    const indexValue = Math.floor(activeVolInfo?.index ?? 0);

    const getChartSize = () => {
        return window.innerWidth < 767 ? {
            width: maxWidth,
            height: maxHeight
        } : {
            width: maxWidth,
            height: maxHeight
        }
    }

    useEffect(() => {
        if (chart) {
            const { width, height } = getChartSize();
            chart.setSize(width > maxWidth ? maxWidth : width, height);
            chart.redraw();
        }
        //eslint-disable-next-line
    }, [windowWidth, chart]);

    useEffect(() => {
        if (!feesInfo) {
            return
        }
        setChart(null);
        setChart(ChartOptions({ chartInitialize, series: feesInfo, activeVolInfo, indexValue }));
        //eslint-disable-next-line
    }, [feesInfo, indexValue]);

    useEffect(() => {
        if (ref.current && ref.current?.children[0]?.style) {
            ref.current.style.overflow = "";
            ref.current.children[0].style.overflow = "";
        }
        //eslint-disable-next-line
    }, [chart]);

    return (
        <div ref={ref} id={chartInitialize.id}></div>
    );
};

export default FundingFeesGraph;